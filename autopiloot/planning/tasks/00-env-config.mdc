---
description: "Define required environment variables and loading for all tools"
globs: []
alwaysApply: false
---

id: "TASK-ENV-0000"
title: "Configure environment variables for Autopiloot agents"
status: "done"
priority: "P0"
labels: ["env", "config"]
dependencies: []
created: "2025-09-11"

# 1) High-Level Objective

Ensure all agents/tools load required env vars with no placeholders committed.

# 2) Background / Context

PRD: Tooling, APIs, and Environment Variables.

# 3) Assumptions & Constraints

- `.env` is git-ignored (see `agents/.gitignore`).
- Values provided out-of-band; do not commit secrets.

# 4) Dependencies

- files: agents/autopiloot/prd.mdc
- files: agents/autopiloot/config/settings.yaml

# 5) Context Plan

Beginning:

- agents/autopiloot/prd.mdc _(read-only)_

End state:

- All tools load env via `dotenv` and `os.getenv`.

# 6) Low-Level Steps

1. Enumerate env names:
   - `OPENAI_API_KEY`
   - `ASSEMBLYAI_API_KEY`
   - `SLACK_BOT_TOKEN`, `SLACK_SIGNING_SECRET`
   - `GOOGLE_APPLICATION_CREDENTIALS`
   - `GOOGLE_DRIVE_FOLDER_ID_TRANSCRIPTS`, `GOOGLE_DRIVE_FOLDER_ID_SUMMARIES`
   - `YOUTUBE_API_KEY`
   - `ZEP_API_KEY`, `ZEP_COLLECTION`
   - `LANGFUSE_PUBLIC_KEY`, `LANGFUSE_SECRET_KEY`, `LANGFUSE_HOST`
   - `TIMEZONE` (set to `Europe/Amsterdam`)
2. Add `load_dotenv()` in each tool module entry.
3. Verify runtime can access Google creds and Slack token.
4. Install Python dependencies for tools, including `yt-dlp` for audio extraction:
   - Use `agents/autopiloot/requirements.txt` and run `pip install -r agents/autopiloot/requirements.txt`.
5. Configuration file:
   - Place `agents/autopiloot/config/settings.yaml` and ensure tasks read non-secret config (e.g., sheet ID, llm settings) from it.

# 7) Acceptance Criteria

- Running any tool does not raise missing env errors when `.env` is present.
- `python -c "import yt_dlp; print('ok')"` succeeds after installing requirements.
- Tasks that need non-secret config read from `settings.yaml`.
