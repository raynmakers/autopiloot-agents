---
description: "Unify exponential backoff logic under a single API and remove duplicates"
globs: []
alwaysApply: false
---

id: "TASK-0074"
title: "Unify exponential backoff utilities"
status: "planned"
priority: "P1"
labels: ["refactor", "reliability", "backoff"]
dependencies: []
created: "2025-10-14"

# 1) High-Level Objective

Use one canonical backoff utility (prefer `core.reliability.RetryPolicy` or `time_utils.calculate_exponential_backoff`) and remove the other.

# 2) Background / Context

Two separate backoff implementations exist in `core/reliability.py` and `core/time_utils.py`.

# 3) Assumptions & Constraints

- Constraint: Choose one API and mark the other as deprecated; update callers.

# 4) Dependencies

- files/agents/autopiloot/core/reliability.py
- files/agents/autopiloot/core/time_utils.py

# 5) Context Plan

Beginning:

- reliability.py, time_utils.py

End state:

- Single backoff source; callers updated.

# 6) Low-Level Steps

1. Decide canonical API: adopt `RetryPolicy.get_delay(attempt)` as primary.
2. In `time_utils`, deprecate or forward `calculate_exponential_backoff` to `RetryPolicy`.
3. Update polling/retry sites to use canonical API.

# 7) Acceptance Criteria

- Only one backoff implementation remains.
- All references updated; tests pass.

# 8) Testing Strategy

- Extend reliability tests to cover chosen API and common attempt patterns.
