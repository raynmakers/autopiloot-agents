# Autopiloot Configuration File
# Runtime settings for orchestrator, scraper, transcriber, summarizer, observability, and linkedin agents

# ID of the Google Sheet used for backfill links
sheet: "1AbC2defGhIJkLmNoPqRSTuVwxyz0123456789"

scraper:
  handles:
    - "@AlexHormozi"
  daily_limit_per_channel: 10

sheets:
  daily_limit_per_channel: 10
  range_a1: "Sheet1!A:D"

llm:
  default:
    model: "gpt-4.1"
    temperature: 0.2
    max_output_tokens: 1500
  prompts:
    summarizer_short_id: "coach_v1"
  tasks:
    summarizer_generate_short:
      model: "gpt-4.1"
      temperature: 0.2
      max_output_tokens: 1500
      prompt_id: "coach_v1"
      prompt_version: "v1"

notifications:
  slack:
    channel: "ops-autopiloot"
    digest:
      enabled: true
      time: "07:00"
      timezone: "Europe/Amsterdam"
      channel: "ops-autopiloot"
      sections:
        - "summary"
        - "budgets"
        - "issues"
        - "links"

budgets:
  transcription_daily_usd: 5.0
  alert_threshold: 0.8  # 80% threshold for budget alerts

idempotency:
  max_video_duration_sec: 4200  # 70 minutes maximum
  status_progression:
    - "discovered"
    - "transcribed" 
    - "summarized"
  drive_naming_format: "{video_id}_{date}_{type}.{ext}"

reliability:
  retry:
    max_attempts: 3  # Maximum retry attempts before DLQ
    base_delay_sec: 60  # Base delay for exponential backoff in seconds
  quotas:
    youtube_daily_limit: 10000  # YouTube Data API daily quota
    assemblyai_daily_limit: 100  # AssemblyAI daily transcription limit

orchestrator:
  parallelism:
    max_parallel_jobs: 5  # Maximum concurrent jobs across all agents
    max_dispatch_batch: 10  # Maximum items per batch dispatch
  coordination:
    run_timeout_minutes: 120  # Maximum runtime for daily runs
    dlq_escalation_threshold: 5  # DLQ items before escalation
  policies:
    budget_enforcement: true  # Enable budget limit enforcement
    quota_enforcement: true  # Enable API quota enforcement
    max_retries_per_video: 3  # Global retry limit per video

linkedin:
  api:
    # RapidAPI host and key via environment variables:
    # RAPIDAPI_LINKEDIN_HOST and RAPIDAPI_LINKEDIN_KEY
    rate_limit_per_minute: 60  # Rate limiting for LinkedIn API calls
    max_posts_per_profile: 50  # Maximum posts to fetch per profile
  profiles:
    # Target LinkedIn profiles for content ingestion
    - "alexhormozi"  # Example LinkedIn username/handle
  zep:
    group_prefix: "linkedin"  # Prefix for Zep group names (e.g., "linkedin_posts", "linkedin_comments")
    collection_name: "linkedin_content"  # Zep collection for LinkedIn content
  processing:
    daily_limit_per_profile: 25  # Maximum content items per profile per day
    content_types:
      - "posts"
      - "comments"
      - "reactions"
    min_engagement_threshold: 5  # Minimum likes/comments to process content
